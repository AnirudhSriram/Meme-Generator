{"version":3,"sources":["Header.js","MemeGenerator.js","auth.js","Auth/Auth.js","App.js","index.js"],"names":["Header","react_default","a","createElement","src","alt","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","React","createRef","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","assertThisInitialized","generateMeme","downloadMeme","_this2","fetch","then","data","json","response","setState","memes","event","_event$target","target","name","value","defineProperty","preventDefault","index","Math","floor","random","prevState","url","ctx","current","getContext","image","refs","drawImage","font","fillText","toDataURL","href","console","log","className","onSubmit","type","onChange","placeholder","ref","crossOrigin","onClick","b","width","height","Component","oauth","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","authorize","logout","App","Fragment","src_Header","src_MemeGenerator","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1d59ce1.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n    return(\n        <header>\n        <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"problemo?\"/>\n        <p>Meme Generator</p>\n    </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nclass MemeGenerator extends React.Component {\n    constructor() {\n        super();\n        this.myRef = React.createRef();\n\n        this.state = {\n            topText: '',\n            bottomText: '',\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.generateMeme = this.generateMeme.bind(this);\n        this.downloadMeme = this.downloadMeme.bind(this);\n    }\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(data => data.json())\n            .then(response => {\n\n                this.setState({\n                    allMemeImgs: response.data.memes\n                })\n\n            })\n    }\n    handleChange(event) {\n\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    generateMeme(event) {\n        event.preventDefault();\n        const index = Math.floor(Math.random() * 100);\n        this.setState(prevState => {\n            return {\n                randomImage: prevState.allMemeImgs[index].url\n            }\n        })\n    }\n\n    //donwload \n    downloadMeme(event) {\n        let ctx = this.myRef.current.getContext(\"2d\");\n        let image = this.refs.image;\n        ctx.drawImage(image, 0, 0);\n        ctx.font = \"40px Courier\";\n        //let topText = this.state.topText;\n        ctx.fillText(this.state.topText, 210, 75);\n        ctx.fillText(this.state.bottomText, 210, 400);\n\n        let url = this.myRef.current.toDataURL(\"image/jpg\");\n\n        event.target.href = url;\n        console.log(event.target);\n\n\n    }\n    render() {\n        return (\n            <div>\n                <form className=\"meme-form\" onSubmit={this.generateMeme}>\n\n                    <input type=\"text\"\n                        name=\"topText\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                        placeholder=\"Top Text\" />\n\n                    <input type=\"text\"\n                        name=\"bottomText\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange}\n                        placeholder=\"Bottom Text\" />\n\n                    <button>Gen</button>\n\n                </form>\n                <div className=\"meme\">\n                    <img ref=\"image\" src={this.state.randomImage} alt=\"\" crossOrigin=\"true\"/>\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n                <a href=\"\"  target=\"_blank\" onClick={this.downloadMeme}>Download Meme</a>\n                <canvas ref={this.myRef} b width={640} height={425} />\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator;","import React from 'react';\nimport Auth from \"./Auth/Auth\";\nconst oauth = new Auth();\n\nclass auth extends React.Component {\n   \n    render(){\n       \n        return <div>\n            <button onClick={oauth.login}>login</button>\n            <button onClick={oauth.logout}>auth</button>\n        </div>;\n    }\n}\n\nexport default auth;  ","import auth0 from \"auth0-js\";\n\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: \"dev-k6dybbzg.auth0.com\",\n    clientID: \"RHNZ3wUnNiuyqMckg6C9pHoQh80hw3oC\",\n    redirectUri: \"http://localhost:3000/\",\n    responseType: \"token id_token\",\n    scope: \"openid\"\n  });\n\n  login() {\n    this.auth0.authorize();\n\n  }\n  logout(){\n      this.auth0.logout();\n  }\n\n}\n","import React from 'react';\nimport './style.css';\nimport Header from \"./Header\";\nimport MemeGenerator from \"./MemeGenerator\";\nimport Auth from \"./auth\";\n\nfunction App() {\n\n  return (\n    <>\n    {/* <Auth /> */}\n    <Header />\n    <MemeGenerator />\n    <h2>Capstone Project</h2>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport auth from \"./auth\";\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\n\n// const routing = (\n//     <Router>\n//       <div>\n        \n//         <Route path=\"/auth\" component={auth} />\n//         <Route path=\"/\" component={App} />\n        \n//       </div>\n//     </Router>\n//   )\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}
{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","react_default","a","createElement","src","alt","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","assertThisInitialized","generateMeme","_this2","fetch","then","data","json","response","setState","memes","event","_event$target","target","name","value","defineProperty","preventDefault","index","Math","floor","random","prevState","url","className","onSubmit","type","onChange","placeholder","React","Component","App","Fragment","src_Header","src_MemeGenerator","ReactDOM","render","src_App","document","getElementById"],"mappings":"8NAWeA,MATf,WACI,OACIC,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,OAAKC,IAAI,iEAAiEC,IAAI,cAC9EJ,EAAAC,EAAAC,cAAA,8ECiEOG,cApEX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,YAAa,gCACbC,YAAa,IAEjBX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IATVA,mFAWM,IAAAgB,EAAAb,KAChBc,MAAM,qCACDC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GAEFL,EAAKM,SAAS,CACVX,YAAaU,EAASF,KAAKI,+CAK9BC,GAAM,IAAAC,EAEMD,EAAME,OAApBC,EAFQF,EAERE,KAAKC,EAFGH,EAEHG,MACZzB,KAAKmB,SAALrB,OAAA4B,EAAA,EAAA5B,CAAA,GACK0B,EAAQC,yCAKJJ,GACTA,EAAMM,iBACN,IAAMC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC9B/B,KAAKmB,SAAS,SAAAa,GACV,MAAO,CACHzB,YAAYyB,EAAUxB,YAAYoB,GAAOK,wCAKjD,OACA1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,YAAYC,SAAUnC,KAAKY,cAEvCrB,EAAAC,EAAAC,cAAA,SAAO2C,KAAK,OACZZ,KAAK,UACLC,MAAOzB,KAAKI,MAAMC,QAClBgC,SAAUrC,KAAKS,aACf6B,YAAY,aAEZ/C,EAAAC,EAAAC,cAAA,SAAO2C,KAAK,OACZZ,KAAK,aACLC,MAAOzB,KAAKI,MAAME,WAClB+B,SAAUrC,KAAKS,aACf6B,YAAY,gBAEZ/C,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,QACP3C,EAAAC,EAAAC,cAAA,OAAKC,IAAKM,KAAKI,MAAMG,YAAaZ,IAAI,KACtCJ,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,OAAOlC,KAAKI,MAAMC,SAChCd,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,UAAUlC,KAAKI,MAAME,qBA/D3BiC,IAAMC,WCWnBC,MATf,WACE,OACElD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkD,SAAA,KACAnD,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACmD,EAAD,QCHJC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b5a67170.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n    return(\n        <header>\n        <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"problemo?\"/>\n        <p>Meme Generator</p>\n    </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nclass MemeGenerator extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            topText: '',\n            bottomText: '',\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.generateMeme = this.generateMeme.bind(this);\n    }\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(data => data.json())\n            .then(response => {\n\n                this.setState({\n                    allMemeImgs: response.data.memes\n                })\n\n            })\n    }\n    handleChange(event){\n       \n        const {name,value} = event.target;\n        this.setState({\n            [name] : value\n        })\n        \n    }\n\n    generateMeme(event){\n        event.preventDefault();\n        const index = Math.floor(Math.random() * 100);\n        this.setState(prevState => {\n            return {\n                randomImage:prevState.allMemeImgs[index].url\n            }\n        })\n    }\n    render() {\n        return(\n        <div>\n            <form className=\"meme-form\" onSubmit={this.generateMeme}>\n\n                <input type=\"text\" \n                name=\"topText\" \n                value={this.state.topText} \n                onChange={this.handleChange}\n                placeholder=\"Top Text\"/>\n\n                <input type=\"text\" \n                name=\"bottomText\" \n                value={this.state.bottomText} \n                onChange={this.handleChange}\n                placeholder=\"Bottom Text\"/>\n\n                <button>Gen</button>\n            </form>\n            <div className=\"meme\">\n                    <img src={this.state.randomImage} alt=\"\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n        </div>\n        )}\n}\n\nexport default MemeGenerator;","import React from 'react';\nimport './style.css';\nimport Header from \"./Header\";\nimport MemeGenerator from \"./MemeGenerator\";\nfunction App() {\n  return (\n    <>\n    <Header />\n    <MemeGenerator />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}